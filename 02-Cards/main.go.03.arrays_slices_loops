package main

import "fmt"

func main() {

	// Arrays and Slices
	// *****************
	// 	2 Types of Data Structures in Go for handling lists
	//
	//	- Array
	//		- Basic
	//		- Fixed-length
	//		- Primitive Data Structure for lists
	//		- All of its elements must have the same type
	//		- variable := [length]type{values}
	//	- Slice
	//		- A bit advanced
	//		- Flexible-length: Can grow or shrink in length
	//		- All of its elements must have the same type
	//		- variable := []type{values}

	// Variable: Slice of strings
	cards := []string{"Ace of Diamonds", newCard()}

	// Adding new elements to a slice
	// 	- Appending does not modify the existing value
	// 	- Instead, it returns a new value with the modification added
	//	- Pure Function
	cards = append(cards, "6 of Spades")

	// Iteration with for-loops
	// ************************
	// 	- "for"
	//		- For iterating over a closed-set (finite set) of elements
	//		- However, it can also be used in a while-like style for iterating over "infinite" set
	// 		- "range <slice>" - The range of slice we want to iterate over
	// 	- With for-loops, the iteration variables are re-declared at each iteration
	//		- So we have to use := instead of =
	// 	- Every declared variable must be used
	//		- If <index> or <value> is not going to be used in the loop body, replace with _
	fmt.Println("Using for-loop with range:")
	for index, card := range cards {
		fmt.Println(index, "--", card)
	}

	fmt.Println("Using for-loop with range without using index:")
	for _, card := range cards {
		fmt.Println("--", card)
	}

	fmt.Println("Using for-loop in a While-like style:")
	i := 0
	for i < len(cards) {
		fmt.Println("--", cards[i])
		i = i + 1
	}

	fmt.Println("Using for-loop in a C-like-for-loop style:")
	for i := 0; i < len(cards); i++ {
		fmt.Println("--", cards[i])
	}

	fmt.Println("Using for-loop in an infinite-loop with break (Do-While-like) style:")
	j := 0
	for {
		fmt.Println("--", cards[j])
		j += 1
		if j >= len(cards) {
			break
		}
	}
}

// Helper Functions
// ****************
func newCard() string {
	return "5 of Diamonds"
}

// > go run main.go
// > go build main.go && ./main.exe
