// Package
// *******
package main

// Imports
// *******
// To deal with underlying OS files, we make use of the ioutil standard package
//	- Use WriteFile(filename string, data []byte, permissions) to write to a file
//		- []byte - Essentially a string of characters
//			- Every element inside a Byte Slice correspond to an ascii character code
//			- We can use asciitable.com as XWalk table
//			- A Byte Slice is just another way to represent a string
import (
	"fmt"
	"io/ioutil"
)

// Functions
// *********
func main() {

	// Using Type Conversion: String to []byte
	greeting_str := "Hello World!"
	greeting_byte := []byte(greeting_str)

	fmt.Println(greeting_byte)

	// Now, we can use WriteFile(filename, byte_slice, permission)
	//	We will just use a permission of 0666
	//	WriteToFile returns an error type by default
	ioutil.WriteFile("datasave_hello_world.tmp", greeting_byte, 0666)
}

// > go run main.go deck.go
