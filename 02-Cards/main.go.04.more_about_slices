package main

import "fmt"

func main() {

	// More About Slices
	// *****************
	//	- Zero-based indexed
	//	- Same element access syntax as typical lists and arrays

	// Creating a slice
	fruits := []string{
		"apple",
		"banana",
		"grape",
		"orange",
	}

	// Accessing a slice element
	fruit := fruits[0]

	fmt.Println("1st fruit:", fruit)
	fmt.Println("---")

	// Selecting a subset/range of slice
	//	- This also follows the typical pattern of slices in other languages
	//	- Also, the "up_to_index" is "Up-to-but-not-including"
	//	- slice[start_index: up_to_index]
	two_fruits := fruits[0:2]

	fmt.Println("two_fruits:")
	for _, fruit := range two_fruits {
		fmt.Println("-", fruit)
	}
	fmt.Println("---")

	// We can also use inference for the beginning or end of slice
	all_fruits_but_first := fruits[1:]

	fmt.Println("all_fruits_but_first:")
	for _, fruit := range all_fruits_but_first {
		fmt.Println("-", fruit)
	}
	fmt.Println("---")

	all_fruits_but_last := fruits[:len(fruits)-1]

	fmt.Println("all_fruits_but_last:")
	for _, fruit := range all_fruits_but_last {
		fmt.Println(fruit)
	}
	fmt.Println("---")
}

// > go run main.go
// > go build main.go && ./main.exe
